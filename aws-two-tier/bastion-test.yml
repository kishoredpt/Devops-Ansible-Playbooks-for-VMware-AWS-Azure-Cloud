---
- name: provision an Ec2 Instance
  hosts: localhost
  connection: local
  tags: provisioning
  vars_files:
      - group_vars/bastion-test.yml
  vars:
      instance_type: "{{ instance_size }}"
      security_group: "{{ security_group_name }}"
      image: "{{ image_name }}"
      region: "{{ region_name }}"
      gpname: "{{ IAM_groupname }}"
      keypair: "{{ keypair_name }}"
      state: present
      number: 1
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      aws_tags:
         NAME: "{{ requestor_name }}"
         ENVIRONMENT: "{{ env_name }}"
         RESOURCE ID: "{{ resource_name }}"
         BACK UP: "{{ back_up }}"
         BUSINESS HOURS: "{{ business_hours }}"
         AUTOMATE: "{{ automate }}"
         OWNER: "{{ owner }}"
         COST CENTER: "{{ cost_center_name }}"
         CUSTOMER: "{{ customer_name }}"
  tasks:
    - name: Create a Security Group
      local_action:
          module: ec2_group
          name: "{{ security_group }}"
          description: security group for db servers
          region: "{{ region }}"
          rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0
          rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0
      register: basic_firewall
    - name: Launch Bastion Host
      ec2:
           group: "{{ security_group }}"
           instance_type: "{{instance_type}}"
           key_name: "{{keypair}}"
           image: "{{image}}"
           aws_access_key: "{{aws_access_key}}"
           aws_secret_key: "{{aws_secret_key}}"
           region: "{{region}}"
           wait: true
           exact_count: "{{number}}"
           instance_tags: "{{ aws_tags }}"
           count_tag:
              Name: "{{gpname}}"
           vpc_subnet_id: "{{ vpc_subnet_id }}"
           source_dest_check: no
      register: bastionhost

    - debug:
        msg: "bastion host  public ip address is: {{bastionhost.instances[0].public_ip}}"

    - name: wait for ssh to come up
      local_action: wait_for
                    host={{bastionhost.instances[0].public_ip}}
                    port=22
                    state=started
      with_items: ec2.instances


